#summary One-sentence summary of this page.

= Введение =

Описание настроек советника "eLT v1.0".


= Детали =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages

//---- input parameters
*extern         double    TWISE_LOTS*        =     20;     // деление ордеров при достижении расчетного значения объема => заданного значения
*extern         int       MN*                =     0;      // магик с которым будет работать советник. чужие магики обрабатываться не будут 
extern string MGP       = "===== MAIN GRID PROP >>>>>>>>>>>>>>>>>";
extern         int       mgp_Target        =     25;    //Фиксированное значение таргета (отменяется использованием useAVG_H1 или useAVG_D)
extern         int       mgp_TargetPlus    =      0;    //увеличение таргета в зависимости от уровня на TargetPlus пунктов

extern         int       mgp_TP_on_first   =     25;    //кол. пунктов для выставления тп на родительский ордер, когда нет сработавших дочерних ордеров
extern         int       mgp_TP            =     50;    //кол. пунктов для выставления тп на сработавшие ордера сетки. расчет от последнего сработавшего ордера
extern         int       mgp_TPPlus        =      0;    //увеличение тп от уровня на заданное количество пунктов.

extern         int       mgp_SL_on_first   =      0;    // стоплосс на первый ордер
extern         bool      mgp_needSLToAll   =  false;    // выставлять сл на всю сетку от последнего ордера или отдельно на каждый ордер
extern         int       mgp_SL            =      0;    // выставляется для каждого

extern         bool      mgp_useLimOrders  =   true;    // разрешает советнику использовать лимитную сетку
extern         int          mgp_LimLevels  =      5;    // количество уровней лимитной сетки, включая родительский ордер

extern         double    mgp_plusVol       =    0.0;    // увеличение объема след. уровня на величину <mgp_plusVol> (+)
extern         double    mgp_multiplyVol   =      2;    // увеличение объема след. уровня в <mgp_multiplyVol> раз   (*)


extern string ADD_DESC  = "=========== Adding lim. order as parent";
extern         bool       add_useAddLimit          =	false		;	// разрешает советнику выставлять добавочный лимитный ордер как родительский
extern         int        	add_LimitLevel              =	3		;	// уровень сетки, от которого будет произведен расчет цены добавочного ордера
extern         int        	add_Limit_Pip               =	15		;	// сколько пунктов от уровня будет выставлен добавочный ордер
extern         bool       	add_Limit_useLevelVol    =	true		;	// разрешает советнику использовать настройку <add_Limit_multiplyVol> иначе будет использоваться <add_Limit_fixVol>  
extern         double     		add_Limit_multiplyVol       =	1	;	// коэф. умножения объема уровня <add_LimitLevel> основной сетки лимитных ордеров
extern         double     		add_Limit_fixVol            = 0.1	;	// фиксированный объем добавочного ордера
																		// Соглашение: сетка для добавочного ордера расчитывается из настроек <mgp_> 

extern   string AL_DESC = "=========== AUTO_LOT SETUP ==========";
extern         double     al_LOT_fix           =    0.1;         // фиксированный стартовый лот
extern            bool    al_needAutoLots      =  false;         // разрешает авторасчет объема родительского ордера
                     bool    al_useMarginMethod      = true;     // разрешает использовать метод залога
extern               double  al_DepositPercent       =    1;     // процент от депозита для расчета методом залога                     
extern string MGP_END   = "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<";

extern string SOP       = "===== STOP ORDERS PROP >>>>>>>>>>>>>>>";
extern         bool     SO_useStopLevels		=    false			;	// разрешает советнику использовать выставление стоповых ордеров
extern         int             SO_Levels				=  -1		;	// -1 - количество уровней совпадает с уровнями лимитных ордеров, либо задает количетво стоповых уровней

extern         int             SO_StartLevel			=   2		;	// уровень, с которого выставляются стоповые ордера для данного родителя. Родительский ордер имеет индекс 1
																		// т.е. в данном случае стоповые ордера будут выставляться с уровня первого лимитного ордера
extern         bool            SO_useLimLevelVol		=	true	;	// разрешает использовать объем текущего уровня лимитной сетки для расчета объема стопового ордера
																		// иначе для расчета объема используется объем родительского ордера.
extern         double          SO_LimLevelVol_Divide	=	-1		;	// деление объема лим. ордера для вычисления объема стоп. до уровня LevelVolParent
																		// -1 выставляется объемом родительского      
extern         int             SO_EndLevel				=   3		;	// Настройки <SO_useLimLevelVol> и <SO_LimLevelVol_Divide> будут использоваться до этого уровня включительно

extern         int             SO_ContinueLevel			=   5		;	// Включая этот уровень и до SO_Levels будут продолжать выставляться стоповые ордера.
extern         double          SO_ContLevelVol_Divide	=	1		;	// Для расчета используется расчетное значение объема лим. ордера текущего уровня.

extern    string  SOTGP = "=========== SO_TARGET, SO_TP, SO_SL =="	;
extern         bool     SO_useKoefProp			=  true				;	// разрешает советнику использовать настройки таргета, тп и сл для стоповых ордеров в качестве коэф. умножения 
																		// применительно к настройкам сетки-родителя.
extern         double        SO_Target					=   1.5		;	// в зависимости от <SO_useKoefProp> будет принимать значение <таргета пред. сетки> * SO_Target, либо фикс. 
																		// значение в пунктах, приведенное к целому числу, для любой дочерней сетки.
extern         double        SO_TP						=   1.5		;	// описание аналогично пред. настройке
extern         double        SO_SL						=   1.5		;	// описание аналогично пред. настройке
extern string SOP_END   = "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"	;	